{"version":3,"file":"static/js/767.b65f03a6.chunk.js","mappings":"0NAeA,EAfuB,SAAAA,GAGrB,OAAOC,MAAM,GAAD,OADK,uCACL,OAAeD,EAAf,4BAFI,qCAEiDE,MAC/D,SAAAC,GACE,OAAIA,EAASC,GACJD,EAASE,OAEX,IAAIC,QAAQC,OACjB,IAAIC,MAAJ,iDAEH,GAEJ,E,mBCXYC,EAAOC,EAAAA,GAAAA,EAAH,4CAIJC,EAAWD,EAAAA,GAAAA,EAAH,0C,SCqCrB,EAtCgB,WACZ,OAA4BE,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACE,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACIhB,GAAYiB,EAAAA,EAAAA,MAAZjB,QAUR,OARAkB,EAAAA,EAAAA,YAAU,WACRC,EAAenB,GACZE,MAAK,SAAAC,GACJW,EAAUX,EACX,IACAiB,OAAM,SAAAL,GAAK,OAAIC,EAASD,EAAMM,QAAnB,GACf,GAAE,CAACrB,IAEGe,GACL,wBAAKA,IAELF,IACE,yBACGA,EAAOS,QAAQC,OAAS,GACvB,0BACG,IACAV,EAAOS,QAAQE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAClB,2BACE,SAAChB,EAAD,WACE,uBAAIe,OAEN,SAACjB,EAAD,UAAOkB,MAJAF,EADS,OAHvB,4CAkBR,C","sources":["services/api-movieReview.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["const movieReviewApi = movieId => {\n  const API_KEY = 'c38399f3218c9d1cc74e683392b12119';\n  const BASE_URL = 'https://api.themoviedb.org/3/movie/';\n  return fetch(`${BASE_URL}${movieId}/reviews?api_key=${API_KEY}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return new Promise.reject(\n        new Error(`Something went wrong. Please, try again later`)\n      );\n    }\n  );\n};\n\nexport default movieReviewApi;\n","import styled from 'styled-components';\n\nexport const Text = styled.p`\n  font-size: 16px;\n`;\n\nexport const UserName = styled.p`\nfont-size: 18px;\n`","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport movieReviewApi from '../../services/api-movieReview';\nimport { Text, UserName } from './Reviews.styled';\n\nconst Reviews = () => {\n    const [review, setReview] = useState(null);\n      const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    movieReviewApi(movieId)\n      .then(response => {\n        setReview(response);\n      })\n      .catch(error => setError(error.message));\n  }, [movieId]);\n\n  return error ? (\n    <h2>{error}</h2>\n  ) : (\n    review && (\n      <div>\n        {review.results.length > 0 ? (\n          <ul>\n            {' '}\n            {review.results.map(({ id, author, content }) => (\n              <li key={id}>\n                <UserName>\n                  <b>{author}</b>\n                </UserName>\n                <Text>{content}</Text>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          `We don't have any reviews for this movie`\n        )}\n      </div>\n    )\n  );\n};\n\nexport default Reviews;\n"],"names":["movieId","fetch","then","response","ok","json","Promise","reject","Error","Text","styled","UserName","useState","review","setReview","error","setError","useParams","useEffect","movieReviewApi","catch","message","results","length","map","id","author","content"],"sourceRoot":""}