{"version":3,"file":"static/js/805.51e74f17.chunk.js","mappings":"4QAaA,EAbwB,SAAAA,GAGtB,OAAOC,MAAM,GAAD,OADK,uCACL,OAAeD,EAAf,oBAFI,qCAEyCE,MAAK,SAAAC,GAC5D,OAAIA,EAASC,GACJD,EAASE,OAEX,IAAIC,QAAQC,OACjB,IAAIC,MAAJ,yCAEH,GACF,E,mBCRYC,EAASC,EAAAA,GAAAA,IAAH,kFAMNC,EAAOD,EAAAA,GAAAA,EAAH,4CAIJE,EAAQF,EAAAA,GAAAA,GAAH,4CAILG,EAAWH,EAAAA,GAAAA,GAAH,4CAIRI,GAAiBJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,uFAMdM,EAAiBN,EAAAA,GAAAA,IAAH,0GAMdO,EAAOP,EAAAA,GAAAA,GAAH,0C,SCoDjB,EArEqB,WAAO,IAAD,IACzB,GAA0BQ,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAG5C5B,GAAY6B,EAAAA,EAAAA,MAAZ7B,QAUR,OARA8B,EAAAA,EAAAA,YAAU,WACRC,EAAgB/B,GACbE,MAAK,SAAAC,GACJiB,EAASjB,EACV,IACA6B,OAAM,SAAAX,GAAK,OAAIC,EAASD,EAAMY,QAAnB,GACf,GAAE,CAACjC,IAEGqB,GACL,wBAAKA,IAELF,IACE,iCACE,SAACL,EAAD,CAAgBoB,GAAIT,EAAaU,QAAjC,6BACA,iBACEC,MAAO,CACLC,QAAS,QAFb,WAKE,SAAC5B,EAAD,CAAQ6B,IAAG,UAtBI,oCAsBJ,OAAsBnB,EAAMoB,aAAeC,IAAI,MAC1D,4BACE,UAAC5B,EAAD,WACGO,EAAMsB,MADT,MACkBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAAA,GAASxB,EAAMyB,cAAe,QADvD,QAGA,UAACjC,EAAD,0BAAmBkC,KAAKC,MAA2B,GAArB3B,EAAM4B,cAApC,QACA,SAAClC,EAAD,wBACA,SAACF,EAAD,UAAOQ,EAAM6B,YACb,SAACnC,EAAD,sBACA,SAACF,EAAD,UAAOQ,EAAM8B,OAAOC,KAAI,SAAAC,GAAK,gBAAOA,EAAMC,KAAb,iBAGjC,UAACpC,EAAD,YACE,SAACH,EAAD,uCACA,UAACI,EAAD,YACE,yBACE,SAAC,KAAD,CAAMiB,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,8BAIN,SAAC,EAAAmB,SAAD,CACEC,UACE,SAAC,KAAD,CACEC,YAAY,OACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,IAPf,UAWE,SAAC,KAAD,QAKT,C","sources":["services/api-movieDetails.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["const movieDetailsApi = movieId => {\n  const API_KEY = 'c38399f3218c9d1cc74e683392b12119';\n  const BASE_URL = 'https://api.themoviedb.org/3/movie/';\n  return fetch(`${BASE_URL}${movieId}?api_key=${API_KEY}`).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return new Promise.reject(\n      new Error(`Something went wrong, try again later`)\n    );\n  });\n};\n\nexport default movieDetailsApi;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Poster = styled.img`\n  margin-right: 20px;\n  width: 300px;\n  height: 450px;\n`;\n\nexport const Text = styled.p`\n  font-size: 16px;\n`;\n\nexport const Title = styled.h1`\n  font-size: 32px;\n`;\n\nexport const SubTitle = styled.h2`\n  font-size: 24px;\n`;\n\nexport const NavigationLink = styled(Link)`\n  color: black;\n  text-decoration: none;\n  font-size: 24px;\n`;\n\nexport const AdditionalInfo = styled.div`\nmargin-top: 10px;\nborder-top: 1px solid black;\nborder-bottom: 1px solid black;\n`\n\nexport const List = styled.ul`\nfont-size: 24px;\n`","import { useState, useEffect, useRef, Suspense } from 'react';\nimport { Outlet, useLocation, useParams, Link } from 'react-router-dom';\nimport { format, parseISO } from 'date-fns';\nimport { RotatingLines } from 'react-loader-spinner';\nimport movieDetailsApi from '../../services/api-movieDetails';\nimport {\n  Poster,\n  Text,\n  Title,\n  SubTitle,\n  AdditionalInfo,\n  NavigationLink,\n  List,\n} from './MovieDetails.styled';\n\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  const IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w500/';\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    movieDetailsApi(movieId)\n      .then(response => {\n        setMovie(response);\n      })\n      .catch(error => setError(error.message));\n  }, [movieId]);\n\n  return error ? (\n    <h2>{error}</h2>\n  ) : (\n    movie && (\n      <>\n        <NavigationLink to={backLinkHref.current}>‚Üê Go back</NavigationLink>\n        <div\n          style={{\n            display: 'flex',\n          }}\n        >\n          <Poster src={`${IMAGE_BASE_URL}${movie.poster_path}`} alt=\"\" />\n          <div>\n            <Title>\n              {movie.title} ({format(parseISO(movie.release_date), 'yyyy')})\n            </Title>\n            <Text>User score: {Math.floor(movie.vote_average * 10)}%</Text>\n            <SubTitle>Overview</SubTitle>\n            <Text>{movie.overview}</Text>\n            <SubTitle>Genres</SubTitle>\n            <Text>{movie.genres.map(genre => `${genre.name} `)}</Text>\n          </div>\n        </div>\n        <AdditionalInfo>\n          <SubTitle>Addititonal information</SubTitle>\n          <List>\n            <li>\n              <Link to=\"cast\">Cast</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\">Reviews</Link>\n            </li>\n          </List>\n        </AdditionalInfo>\n        <Suspense\n          fallback={\n            <RotatingLines\n              strokeColor=\"grey\"\n              strokeWidth=\"5\"\n              animationDuration=\"0.75\"\n              width=\"96\"\n              visible={true}\n            />\n          }\n        >\n          <Outlet />\n        </Suspense>\n      </>\n    )\n  );\n};\n\nexport default MovieDetails;\n"],"names":["movieId","fetch","then","response","ok","json","Promise","reject","Error","Poster","styled","Text","Title","SubTitle","NavigationLink","Link","AdditionalInfo","List","useState","movie","setMovie","error","setError","location","useLocation","backLinkHref","useRef","state","from","useParams","useEffect","movieDetailsApi","catch","message","to","current","style","display","src","poster_path","alt","title","format","parseISO","release_date","Math","floor","vote_average","overview","genres","map","genre","name","Suspense","fallback","strokeColor","strokeWidth","animationDuration","width","visible"],"sourceRoot":""}