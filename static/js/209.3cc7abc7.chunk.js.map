{"version":3,"file":"static/js/209.3cc7abc7.chunk.js","mappings":"0NAeA,EAfuB,SAAAA,GAGrB,OAAOC,MAAM,GAAD,OADK,4CACL,oBAFI,mCAEJ,kBAAyCD,IAASE,MAC5D,SAAAC,GACE,OAAIA,EAASC,GACJD,EAASE,OAEX,IAAIC,QAAQC,OACjB,IAAIC,MAAJ,iDAEH,GAEJ,E,SCgCD,EAzCgB,WACZ,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOT,EAAP,KAAcU,EAAd,KACA,GAAwCD,EAAAA,EAAAA,UAAS,MAAjD,eAAOE,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACQ,KAAVf,GAGJgB,EAAehB,GACZE,MAAK,SAAAC,GAAQ,OAAIS,EAAgBT,EAASc,QAA7B,IACbC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACjB,GAAE,CAACnB,IAQJ,OACE,iCACE,0BACE,kBAAMsB,SATK,SAACC,GACdA,EAAEC,iBACFd,EAASa,EAAEE,OAAOC,SAASC,MAAMC,MACpC,EAMK,WACE,kBAAOC,KAAK,QAAQC,KAAK,OAAOC,YAAY,qBAC5C,mBAAQD,KAAK,SAAb,yBAGHnB,IACC,wBACGA,EAAaqB,KAAI,SAAAC,GAAK,OACrB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAACC,KAAMxB,GAA/C,SAA2DoB,EAAMK,SAD1DL,EAAME,GADM,QASjC,C","sources":["services/api-searchMovie.js","pages/Movies/Movies.jsx"],"sourcesContent":["const movieSearchApi = query => {\n  const API_KEY = 'c38399f3218c9d1cc74e683392b12119';\n  const BASE_URL = 'https://api.themoviedb.org/3/search/movie';\n  return fetch(`${BASE_URL}?api_key=${API_KEY}&query=${query}`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n      return new Promise.reject(\n        new Error(`Something went wrong. Please, try again later`)\n      );\n    }\n  );\n};\n\nexport default movieSearchApi;\n","import { useState, useEffect } from 'react'\nimport { Link, useLocation } from 'react-router-dom';\nimport movieSearchApi from '../../services/api-searchMovie';\n\n const Movies = () => {\n    const [query, setQuery] = useState('');\n    const [searchResult, setSearchResult] = useState(null)\n    const location = useLocation();\n\n    useEffect(() => {\n        if (query === '') {\n            return;\n        }\n        movieSearchApi(query)\n          .then(response => setSearchResult(response.results))\n          .catch(error => console.log(error));\n    }, [query]);\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        setQuery(e.target.elements.input.value);\n    }\n\n    \n    return (\n      <>\n        <div>\n          <form onSubmit={onSubmit}>\n            <input name=\"input\" type=\"text\" placeholder=\"type movie name\" />\n            <button type=\"submit\">Search</button>\n          </form>\n        </div>\n        {searchResult && (\n          <ul>\n            {searchResult.map(movie => (\n              <li key={movie.id}>\n                <Link to={`/movies/${movie.id}`} state={{from: location}}>{movie.title}</Link>\n              </li>\n            ))}\n          </ul>\n        )}\n      </>\n    );\n };\n\nexport default Movies;\n"],"names":["query","fetch","then","response","ok","json","Promise","reject","Error","useState","setQuery","searchResult","setSearchResult","location","useLocation","useEffect","movieSearchApi","results","catch","error","console","log","onSubmit","e","preventDefault","target","elements","input","value","name","type","placeholder","map","movie","to","id","state","from","title"],"sourceRoot":""}